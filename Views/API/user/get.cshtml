@using SL.Util
@{
    RequestUtil req = new RequestUtil();

    int userId = req.Int("userId", false, "参数错误:userId");
    string auth = req.String("auth", false, "参数错误:auth");
    string IMEI = req.String("IMEI");
    string ivcode = req.String("ivcode");
    string newAuth;

    if (req.HasError)
    {
        Json.Write(new { success = false, msg = req.FirstError, errors = req.GetErrors() }, Output);
    }
    else if (!AuthHelper.Check(userId, auth, out newAuth))
    {
        Json.Write(new { success = false, msg = "登录过期，请重新登录", error_code = 503 }, Output);
    }
    else
    {
        using (SL.Data.Database db = SL.Data.Database.Open())
        {
            var data = db.QuerySingle("select PSP_ID as UserID,PSP_CODE as Mobile,PSP_NAME as UserName,PSP_REGISTRATION_DT,XPS_EFFICTIVE_AMOUNT as Amount,XPS_BIRTH_DT as BirthDay,XPS_GND_ID as Gender,XPS_FAMILY_SIZE as FamilySize,XPS_CHILD_FLAG as HasChild,XPS_CHILD_BIRTH_DT as ChildBirthDay,XPS_CTY_ID as CityID,CTY_DESC as CityName,CTY_PRV_ID as ProvID,XPS_AVAILABLEPOINTS as Points,XPS_START_FREE_DT,XPS_END_FREE_DT,XPS_MOBILE_IMEI,XPS_CTG_ID from BProspect join XProspect on PSP_ID=XPS_PSP_ID left join RCity on CTY_ID=XPS_CTY_ID where PSP_ID=@p0", userId);

            if (!string.IsNullOrEmpty(newAuth))
            {
                data.Auth = newAuth;
            }

            if (data.Points == null)
            {
                data.Points = 0;
            }

            string vdpMessage = null;
            if (!string.IsNullOrEmpty(IMEI))
            {
                if (IMEI != data.XPS_MOBILE_IMEI)
                {
                    db.Execute("update XProspect set XPS_MOBILE_IMEI=@p0 where XPS_PSP_ID=@p1", IMEI, userId);
                    data.XPS_MOBILE_IMEI = IMEI;
                }
            }

            data.PSP_CODE = Base64Util.Encode("pspcode=" + data.Mobile + "&code=" + Md5.MD5(data.Mobile + "abs.cn" + (data.Mobile == "18721979478" ? "605283" : ("" + userId))));

            string ivcinfo = "";

            if (!String.IsNullOrEmpty(ivcode))
            {
                var res = HttpUtil.RequestJson(Request.Url.Host.IndexOf("appuser.abs.cn") == 0 ? "http://appapi-1-2-0.abs.cn/api/user/getcsvbyivc" : "http://testappapi-1-2-0.abs.cn/api/user/getcsvbyivc", new Dictionary<string, string> {
                    { "pspcode", data.PSP_CODE },
                    { "ivccode", ivcode }
                });

                if (res.success)
                {
                    vdpMessage = res.data;
                }
                else
                {
                }
                ivcinfo = Json.Encode(res);
            }


            if (data.XPS_END_FREE_DT != null && data.XPS_START_FREE_DT != null)
            {
                var date = data.XPS_START_FREE_DT > DateTime.Today ? data.XPS_START_FREE_DT : DateTime.Today;
                data.TotalMonths = Math.Max(0, data.XPS_END_FREE_DT.Month - ((data.XPS_START_FREE_DT.Year - data.XPS_END_FREE_DT.Year) * 12 + data.XPS_START_FREE_DT.Month));
                data.FreeMonths = Math.Max(0, data.XPS_END_FREE_DT.Month - ((date.Year - data.XPS_END_FREE_DT.Year) * 12 + date.Month));
            }
            else
            {
                data.TotalMonths = 0;
                data.FreeMonths = 0;
            }

            data.FreeCouponsCount = db.QueryValue<int>("select count(1) from BCashVoucher join BVoucherActivity on CSV_VCA_ID=VCA_ID where CSV_PSP_ID=@p0 and (CSV_PUR_ID=0 or CSV_PUR_ID is null) and VCA_VALID_FLAG=1 and CSV_USE_FLAG in (0,1) and @p1<=CSV_END_DT and VCA_VCT_ID=4", userId, DateTime.Now);

            data.CouponsCount = db.QueryValue<int>("select count(1) from BCashVoucher join BVoucherActivity on CSV_VCA_ID=VCA_ID where CSV_PSP_ID=@p0 and (CSV_PUR_ID=0 or CSV_PUR_ID is null) and VCA_VALID_FLAG=1 and CSV_USE_FLAG in (0,1) and @p1<=CSV_END_DT and VCA_VCT_ID!=4", userId, DateTime.Now);

            data.OrderCount = db.QueryValue<int>("select count(1) from BPurchase left join BChannel on PUR_CNL_ID=CNL_ID where PUR_PSP_ID=@p0 and CNL_CLT_ID!=6 and CNL_CLT_ID!=5", userId);

            var userData = db.QuerySingle("select USL_LOGINNAME,USL_PASSWORD from WUserLogin where USL_PSP_ID=@p0", userId);

            var token = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes("m=" + userData.USL_LOGINNAME + "&p=" + Md5.MD5(userData.USL_LOGINNAME + userData.USL_PASSWORD)));

            data.OpenUrl = "http://m.abs.cn?src=8003&u=" + token;
            data.token = new { src = 8003, u = token };

            data.StewardNum = db.QueryValue<int>(@"SELECT ISNULL(SUM(1),0)as qty FROM ( SELECT   min(LPK_PRD_ID)as LPK_PRD_ID  From (select  min(LPK_PRD_ID)as LPK_PRD_ID, PRD_PRH_ID from  bpurchase left join LPrdPur on PUR_ID = LPK_PUR_ID left join BChannel on PUR_CNL_ID=CNL_ID left join RChannelType on CNL_CLT_ID=CLT_ID left JOIN BProduct on LPK_PRD_ID = PRD_ID left JOIN BProdHeader on PRH_ID=PRD_PRH_ID left JOIN WProductPicture on PRD_ID = WPP_PRD_ID left join RProductCategory on PRH_PCT_ID =PCG_ID where PUR_PSP_ID=@p0 and  CLT_ID in(1,2,3,4,5,6) and LEN(PRD_CODE)>3 and PUR_PUS_ID in (8,20)GROUP BY PRD_PRH_ID)as pur INNER join (SELECT BLD_PRH_ID FROM  BButlerServiceDetails group by BLD_PRH_ID )AS tc on pur.PRD_PRH_ID =tc.BLD_PRH_ID group by PRD_PRH_ID )as tp ", userId);

            Json.Write(new { success = true, data = data, vdpMessage = vdpMessage, ivcinfo = ivcinfo }, Output);
        }
    }
}
